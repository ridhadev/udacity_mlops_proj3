# This is a basic workflow to help you get started with Actions

name: Python application

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Set up Python 3.9
        uses: actions/setup-python@v3 # A pre-built GitHub Action that sets up a Python environment.
        with: 
          python-version: 3.9

      - name: Install dependencies # The first step that isn't just calling another action.
        run: |
          python -m pip install --upgrade pip # Upgrade pip to the latest version.
          pip install pytest # Install pytest.
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi # If we have a requirements.txt, then install it.
          if [ -f requirements.dev.txt ]; then pip install -r requirements.dev.txt; fi # If we have a requirements.dev.txt, then install it.
      
      - name: Lint with flake8 # Must be set in requirements.dev.txt
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Test with pytest
        run: |
          pytest
  
